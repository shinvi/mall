<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinvi.mall.dao.UserDoMapper">
    <resultMap id="BaseResultMap" type="com.shinvi.mall.pojo.domain.UserDo">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="pw_question" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="pw_answer" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="role" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>

    <resultMap id="otherMap" type="com.shinvi.mall.pojo.domain.UserDo">
        <result property="id" column="id"/>
        <result property="role" column="role"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password, email, phone, pw_question, pw_answer, role
    </sql>
    <sql id="Base_User_Column_List">
        u.id, u.username, u.password, u.email, u.phone, u.pw_question, u.pw_answer, u.role
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mmall_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from mmall_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.shinvi.mall.pojo.domain.UserDo">
        insert into mmall_user (id,
                                username,
                                password,
                                email,
                                phone,
                                pw_question,
                                pw_answer,
                                role,
                                create_time,
                                update_time)
        values (#{id,jdbcType=INTEGER},
                #{username,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR},
                #{phone,jdbcType=VARCHAR},
                #{pwQuestion,jdbcType=VARCHAR},
                #{pwAnswer,jdbcType=VARCHAR},
                #{role,jdbcType=INTEGER},
                now(),
                now())
    </insert>
    <insert id="insertSelective" parameterType="com.shinvi.mall.pojo.domain.UserDo">
        insert into mmall_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="pwQuestion != null">
                pw_question,
            </if>
            <if test="pwAnswer != null">
                pw_answer,
            </if>
            <if test="role != null">
                role,
            </if>
            create_time,
            update_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="pwQuestion != null">
                #{pwQuestion,jdbcType=VARCHAR},
            </if>
            <if test="pwAnswer != null">
                #{pwAnswer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            now(),
            now(),
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.shinvi.mall.pojo.domain.UserDo">
        update mmall_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="pwQuestion != null">
                pw_question = #{pwQuestion,jdbcType=VARCHAR},
            </if>
            <if test="pwAnswer != null">
                pw_answer = #{pwAnswer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=INTEGER},
            </if>
            update_time = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shinvi.mall.pojo.domain.UserDo">
        update mmall_user
        set username    = #{username,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            phone       = #{phone,jdbcType=VARCHAR},
            pw_question = #{pwQuestion,jdbcType=VARCHAR},
            pw_answer   = #{pwAnswer,jdbcType=VARCHAR},
            role        = #{role,jdbcType=INTEGER},
            update_time = now()
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="countUsername" parameterType="string" resultType="int">
        select count(1)
        from mmall_user
        where username = #{username}
    </select>

    <select id="countEmail" parameterType="string" resultType="int">
        select count(1)
        from mmall_user
        where email = #{email}
    </select>
    <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from mmall_user
        where username = #{arg0}
        and password = #{arg1}
    </select>

    <select id="selectByToken" resultMap="BaseResultMap" parameterType="string">
        select
        <include refid="Base_User_Column_List"/>
        from (select user_id from mmall_user_token where token = #{token}
        and expire_time > now()) t
        join mmall_user u on u.id = t.user_id
    </select>

    <select id="selectUserIdNRoleByToken" parameterType="string" resultMap="otherMap">
        select u.role, u.id
        from (select user_id from mmall_user_token where token = #{token}
                                                     and expire_time > now()) t
                 join mmall_user u on u.id = t.user_id
    </select>

    <select id="selectQuestionByUsername" parameterType="String" resultType="string">
        select pw_question
        from mmall_user
        where username = #{username}
    </select>

    <update id="updatePasswordByQuestion" parameterType="map">
        update mmall_user
        set password    = #{arg2},
            update_time = now()
        where username = #{arg0}
          and pw_answer = #{arg1}
    </update>
    <update id="updatePasswordByOldPassword" parameterType="map">
        update mmall_user
        set password    = #{arg2},
            update_time = now()
        where id = #{arg0}
          and password = #{arg1}
    </update>

    <select id="countEmailWithoutPrimaryKey" parameterType="map" resultType="int">
        select count(1)
        from mmall_user
        where email = #{arg0}
          and id != #{arg1}
    </select>
</mapper>